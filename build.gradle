import io.github.kobylynskyi.graphql.codegen.gradle.GraphQLCodegenGradleTask

plugins {
    id 'java'
    id 'scala'
    id "org.jetbrains.kotlin.jvm" version "1.4.31"
    id "io.github.kobylynskyi.graphql.codegen" version "4.1.5-SNAPSHOT"
}

group 'io.github.jxnu-liguobin'
version '0.1.0-SNAPSHOT'

java.sourceCompatibility = JavaVersion.VERSION_1_8

sourceSets {
    main.scala.srcDirs += ["$buildDir/scala-graphql", "$buildDir/java-graphql"]
    main.java.srcDirs = []
    main.kotlin.srcDirs += ["$buildDir/kotlin-graphql"]
}

allprojects {
    repositories {
        maven { url 'https://maven.aliyun.com/repository/public/' }
        mavenLocal()
        mavenCentral()
    }
}

dependencies {
    implementation "io.github.kobylynskyi:graphql-java-codegen:4.1.5-SNAPSHOT"
    implementation "javax.validation:validation-api:2.0.1.Final"
    implementation "com.squareup.okhttp3:okhttp:4.9.1"
    implementation "org.json:json:20201115"
    implementation "com.fasterxml.jackson.core:jackson-core:2.12.2"
    implementation "com.fasterxml.jackson.core:jackson-databind:2.12.2"
    implementation "com.fasterxml.jackson.core:jackson-annotations:2.12.2"
    implementation 'com.fasterxml.jackson.module:jackson-module-parameter-names:2.12.2'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jdk8:2.12.2'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.12.2'

    implementation "com.fasterxml.jackson.module:jackson-module-kotlin:2.12.2"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.4.31"

    implementation "org.scala-lang:scala-library:2.13.5"
    implementation "org.scala-lang:scala-reflect:2.13.5"
    implementation "com.fasterxml.jackson.module:jackson-module-scala_2.13:2.12.2"
//    implementation "com.github.changvvb:jackson-module-caseclass_2.12:1.1.1" //only support 2.12

}

/**
 * Generate apis and models in Kotlin
 */
//compileKotlin.dependsOn "graphqlCodegenKotlinService"
task graphqlCodegenKotlinService(type: GraphQLCodegenGradleTask) {
    graphqlSchemas.includePattern = "schema\\.graphqls"
    outputDir = new File("$buildDir/kotlin-graphql")
    jsonConfigurationFile = "src/main/resources/kotlin-codegen-config.json"
}

/**
 * Generate apis and models in scala
 */
//compileScala.dependsOn "graphqlCodegenScalaService"
task graphqlCodegenScalaService(type: GraphQLCodegenGradleTask) {
    graphqlSchemas.includePattern = "schema\\.graphqls"
    outputDir = new File("$buildDir/scala-graphql")
    jsonConfigurationFile = "src/main/resources/scala-codegen-config.json"
}

/**
 * Generate apis and models in java
 */
//compileJava.dependsOn "graphqlCodegenJavaService"
task graphqlCodegenJavaService(type: GraphQLCodegenGradleTask) {
    graphqlSchemas.includePattern = "schema\\.graphqls"
    outputDir = new File("$buildDir/java-graphql")
    jsonConfigurationFile = "src/main/resources/java-codegen-config.json"
}

tasks.withType(JavaCompile).configureEach {
//    options.fork = true
    options.incremental = true
    options.compilerArgs += ['-parameters']
}

tasks.withType(ScalaCompile).configureEach {
//    options.fork = true
    options.incremental = true
    options.compilerArgs += ['-parameters']
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).configureEach {
    kotlinOptions {
        freeCompilerArgs = ["-Xmx1024"]
        jvmTarget = '1.8'
        javaParameters = true
    }
}