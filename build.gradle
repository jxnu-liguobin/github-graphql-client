import com.kobylynskyi.graphql.codegen.model.GeneratedLanguage
import io.github.kobylynskyi.graphql.codegen.gradle.GraphQLCodegenGradleTask

plugins {
    id 'java'
    id "org.jetbrains.kotlin.jvm" version "1.3.71"
    id "io.github.kobylynskyi.graphql.codegen" version "4.1.4"
}

group 'io.github.jxnu-liguobin'
version '0.1.0-SNAPSHOT'

sourceCompatibility = 1.8

sourceSets {
    main.kotlin.srcDirs += "src/main/graphql"
}

repositories {
    maven {
        url 'https://repo.gradle.org/gradle/libs-releases-local'
    }
    mavenCentral()
    mavenLocal()
    jcenter()
}


dependencies {
    implementation "io.github.kobylynskyi:graphql-java-codegen:4.1.4"
    implementation "javax.validation:validation-api:2.0.1.Final"
    implementation "com.squareup.okhttp3:okhttp:4.2.2"
    implementation "com.fasterxml.jackson.core:jackson-core:2.12.0"
    implementation "com.fasterxml.jackson.core:jackson-databind:2.12.0"
    implementation "com.fasterxml.jackson.module:jackson-module-kotlin:2.12.0"
    implementation "com.fasterxml.jackson.core:jackson-annotations:2.12.0"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    testImplementation "org.junit.jupiter:junit-jupiter-api:5.7.0"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:5.7.0"
}

/**
 * Generate apis and models in Kotlin
 */
compileKotlin.dependsOn "graphqlCodegenKotlinService"
task graphqlCodegenKotlinService(type: GraphQLCodegenGradleTask) {
    graphqlSchemas.includePattern = "schema\\.graphqls"
    outputDir = new File("src/main/graphql")
    jsonConfigurationFile = "src/main/resources/codegen-config.json"
    generatedLanguage = GeneratedLanguage.KOTLIN // invalid in json
}