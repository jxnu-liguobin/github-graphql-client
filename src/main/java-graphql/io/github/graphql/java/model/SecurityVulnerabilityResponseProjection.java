package io.github.graphql.java.model;

import com.kobylynskyi.graphql.codegen.model.graphql.GraphQLResponseField;
import com.kobylynskyi.graphql.codegen.model.graphql.GraphQLResponseProjection;
import java.util.Objects;

/**
 * Response projection for SecurityVulnerability
 */
@javax.annotation.Generated(
    value = "com.kobylynskyi.graphql.codegen.GraphQLCodegen",
    date = "2021-03-07T19:46:14+0800"
)
public class SecurityVulnerabilityResponseProjection extends GraphQLResponseProjection {

    public SecurityVulnerabilityResponseProjection() {
    }

    @Override
    public SecurityVulnerabilityResponseProjection all$() {
        return all$(3);
    }

    @Override
    public SecurityVulnerabilityResponseProjection all$(int maxDepth) {
        if (projectionDepthOnFields.getOrDefault("SecurityVulnerabilityResponseProjection.SecurityAdvisoryResponseProjection.advisory", 0) <= maxDepth) {
            projectionDepthOnFields.put("SecurityVulnerabilityResponseProjection.SecurityAdvisoryResponseProjection.advisory", projectionDepthOnFields.getOrDefault("SecurityVulnerabilityResponseProjection.SecurityAdvisoryResponseProjection.advisory", 0) + 1);
            this.advisory(new SecurityAdvisoryResponseProjection().all$(maxDepth - projectionDepthOnFields.getOrDefault("SecurityVulnerabilityResponseProjection.SecurityAdvisoryResponseProjection.advisory", 0)));
        }
        if (projectionDepthOnFields.getOrDefault("SecurityVulnerabilityResponseProjection.SecurityAdvisoryPackageVersionResponseProjection.firstPatchedVersion", 0) <= maxDepth) {
            projectionDepthOnFields.put("SecurityVulnerabilityResponseProjection.SecurityAdvisoryPackageVersionResponseProjection.firstPatchedVersion", projectionDepthOnFields.getOrDefault("SecurityVulnerabilityResponseProjection.SecurityAdvisoryPackageVersionResponseProjection.firstPatchedVersion", 0) + 1);
            this.firstPatchedVersion(new SecurityAdvisoryPackageVersionResponseProjection().all$(maxDepth - projectionDepthOnFields.getOrDefault("SecurityVulnerabilityResponseProjection.SecurityAdvisoryPackageVersionResponseProjection.firstPatchedVersion", 0)));
        }
        if (projectionDepthOnFields.getOrDefault("SecurityVulnerabilityResponseProjection.SecurityAdvisoryPackageResponseProjection.Package", 0) <= maxDepth) {
            projectionDepthOnFields.put("SecurityVulnerabilityResponseProjection.SecurityAdvisoryPackageResponseProjection.Package", projectionDepthOnFields.getOrDefault("SecurityVulnerabilityResponseProjection.SecurityAdvisoryPackageResponseProjection.Package", 0) + 1);
            this.Package(new SecurityAdvisoryPackageResponseProjection().all$(maxDepth - projectionDepthOnFields.getOrDefault("SecurityVulnerabilityResponseProjection.SecurityAdvisoryPackageResponseProjection.Package", 0)));
        }
        this.severity();
        this.updatedAt();
        this.vulnerableVersionRange();
        this.typename();
        return this;
    }

    public SecurityVulnerabilityResponseProjection advisory(SecurityAdvisoryResponseProjection subProjection) {
        return advisory(null, subProjection);
    }

    public SecurityVulnerabilityResponseProjection advisory(String alias, SecurityAdvisoryResponseProjection subProjection) {
        fields.add(new GraphQLResponseField("advisory").alias(alias).projection(subProjection));
        return this;
    }

    public SecurityVulnerabilityResponseProjection firstPatchedVersion(SecurityAdvisoryPackageVersionResponseProjection subProjection) {
        return firstPatchedVersion(null, subProjection);
    }

    public SecurityVulnerabilityResponseProjection firstPatchedVersion(String alias, SecurityAdvisoryPackageVersionResponseProjection subProjection) {
        fields.add(new GraphQLResponseField("firstPatchedVersion").alias(alias).projection(subProjection));
        return this;
    }

    public SecurityVulnerabilityResponseProjection Package(SecurityAdvisoryPackageResponseProjection subProjection) {
        return Package(null, subProjection);
    }

    public SecurityVulnerabilityResponseProjection Package(String alias, SecurityAdvisoryPackageResponseProjection subProjection) {
        fields.add(new GraphQLResponseField("package").alias(alias).projection(subProjection));
        return this;
    }

    public SecurityVulnerabilityResponseProjection severity() {
        return severity(null);
    }

    public SecurityVulnerabilityResponseProjection severity(String alias) {
        fields.add(new GraphQLResponseField("severity").alias(alias));
        return this;
    }

    public SecurityVulnerabilityResponseProjection updatedAt() {
        return updatedAt(null);
    }

    public SecurityVulnerabilityResponseProjection updatedAt(String alias) {
        fields.add(new GraphQLResponseField("updatedAt").alias(alias));
        return this;
    }

    public SecurityVulnerabilityResponseProjection vulnerableVersionRange() {
        return vulnerableVersionRange(null);
    }

    public SecurityVulnerabilityResponseProjection vulnerableVersionRange(String alias) {
        fields.add(new GraphQLResponseField("vulnerableVersionRange").alias(alias));
        return this;
    }

    public SecurityVulnerabilityResponseProjection typename() {
        return typename(null);
    }

    public SecurityVulnerabilityResponseProjection typename(String alias) {
        fields.add(new GraphQLResponseField("__typename").alias(alias));
        return this;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj) {
            return true;
        }
        if (obj == null || getClass() != obj.getClass()) {
            return false;
        }
        final SecurityVulnerabilityResponseProjection that = (SecurityVulnerabilityResponseProjection) obj;
        return Objects.equals(fields, that.fields);
    }

    @Override
    public int hashCode() {
        return Objects.hash(fields);
    }

}
